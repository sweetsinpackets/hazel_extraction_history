// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Extraction_declear$Extraction = require("./Extraction_declear.bs.js");

function uhtyp_translater(t) {
  if (typeof t === "number") {
    switch (t) {
      case /* Hole */0 :
          return ;
      case /* Unit */1 :
          return "()";
      case /* Num */2 :
          return "int";
      case /* Bool */3 :
          return "bool";
      
    }
  } else {
    switch (t.tag | 0) {
      case /* Parenthesized */0 :
          return Extraction_declear$Extraction.option_string_concat(/* :: */[
                      "(",
                      /* :: */[
                        uhtyp_translater(t[0]),
                        /* :: */[
                          ")",
                          /* [] */0
                        ]
                      ]
                    ]);
      case /* List */1 :
          return Extraction_declear$Extraction.option_string_concat(/* :: */[
                      uhtyp_translater(t[0]),
                      /* :: */[
                        " list",
                        /* [] */0
                      ]
                    ]);
      case /* OpSeq */2 :
          var skel_t = t[0];
          if (skel_t.tag && !skel_t[0]) {
            return uhtyp_opseq_translater(t[1]);
          } else {
            return ;
          }
      
    }
  }
}

function uhtyp_opseq_translater(opseq) {
  if (opseq.tag) {
    return Extraction_declear$Extraction.option_string_concat(/* :: */[
                uhtyp_opseq_translater(opseq[0]),
                /* :: */[
                  uhtyp_op_translater(opseq[1]),
                  /* :: */[
                    uhtyp_translater(opseq[2]),
                    /* [] */0
                  ]
                ]
              ]);
  } else {
    return Extraction_declear$Extraction.option_string_concat(/* :: */[
                uhtyp_translater(opseq[0]),
                /* :: */[
                  uhtyp_op_translater(opseq[1]),
                  /* :: */[
                    uhtyp_translater(opseq[2]),
                    /* [] */0
                  ]
                ]
              ]);
  }
}

function uhtyp_op_translater(op) {
  switch (op) {
    case /* Arrow */0 :
        return " -> ";
    case /* Prod */1 :
        return " * ";
    case /* Sum */2 :
        return " | ";
    
  }
}

exports.uhtyp_translater = uhtyp_translater;
exports.uhtyp_opseq_translater = uhtyp_opseq_translater;
exports.uhtyp_op_translater = uhtyp_op_translater;
/* No side effect */
